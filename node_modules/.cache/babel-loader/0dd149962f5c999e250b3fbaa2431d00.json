{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nvar todoSlice = createSlice({\n  name: \"todos\",\n  initialState: [],\n  reducers: {\n    addTodo: function addTodo(state, action) {\n      var newTodo = {\n        id: Date.now(),\n        title: action.payload.title,\n        completed: false\n      };\n      state.push(newTodo);\n    },\n    toggleComplete: function toggleComplete(state, action) {\n      var index = state.findIndex(function (todo) {\n        return todo.id === action.payload.id;\n      });\n      state[index].completed = action.payload.completed;\n    },\n    deleteTodo: function deleteTodo(state, action) {\n      return state.filter(function (todo) {\n        return todo.id !== action.payload.id;\n      });\n    }\n  }\n});\nvar _todoSlice$actions = todoSlice.actions,\n    addTodo = _todoSlice$actions.addTodo,\n    toggleComplete = _todoSlice$actions.toggleComplete,\n    deleteTodo = _todoSlice$actions.deleteTodo;\nexport { addTodo, toggleComplete, deleteTodo };\nexport default todoSlice.reducer;","map":{"version":3,"sources":["/Users/li2he1/Downloads/Redux-Thunk-Todo/src/redux/todoSlice.js"],"names":["createSlice","createAsyncThunk","todoSlice","name","initialState","reducers","addTodo","state","action","newTodo","id","Date","now","title","payload","completed","push","toggleComplete","index","findIndex","todo","deleteTodo","filter","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,gBAAtB,QAA8C,kBAA9C;AAEA,IAAMC,SAAS,GAAGF,WAAW,CAAC;AAC5BG,EAAAA,IAAI,EAAE,OADsB;AAE5BC,EAAAA,YAAY,EAAE,EAFc;AAG5BC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,OAAO,EAAE,iBAACC,KAAD,EAAQC,MAAR,EAAmB;AAC1B,UAAMC,OAAO,GAAG;AACdC,QAAAA,EAAE,EAAEC,IAAI,CAACC,GAAL,EADU;AAEdC,QAAAA,KAAK,EAAEL,MAAM,CAACM,OAAP,CAAeD,KAFR;AAGdE,QAAAA,SAAS,EAAE;AAHG,OAAhB;AAKAR,MAAAA,KAAK,CAACS,IAAN,CAAWP,OAAX;AACD,KARO;AASRQ,IAAAA,cAAc,EAAE,wBAACV,KAAD,EAAQC,MAAR,EAAmB;AACjC,UAAMU,KAAK,GAAGX,KAAK,CAACY,SAAN,CAAgB,UAACC,IAAD;AAAA,eAAUA,IAAI,CAACV,EAAL,KAAYF,MAAM,CAACM,OAAP,CAAeJ,EAArC;AAAA,OAAhB,CAAd;AACAH,MAAAA,KAAK,CAACW,KAAD,CAAL,CAAaH,SAAb,GAAyBP,MAAM,CAACM,OAAP,CAAeC,SAAxC;AACD,KAZO;AAaRM,IAAAA,UAAU,EAAE,oBAACd,KAAD,EAAQC,MAAR,EAAmB;AAC7B,aAAOD,KAAK,CAACe,MAAN,CAAa,UAACF,IAAD;AAAA,eAAUA,IAAI,CAACV,EAAL,KAAYF,MAAM,CAACM,OAAP,CAAeJ,EAArC;AAAA,OAAb,CAAP;AACD;AAfO;AAHkB,CAAD,CAA7B;AAsBO,yBAAgDR,SAAS,CAACqB,OAA1D;AAAA,IAAQjB,OAAR,sBAAQA,OAAR;AAAA,IAAiBW,cAAjB,sBAAiBA,cAAjB;AAAA,IAAiCI,UAAjC,sBAAiCA,UAAjC;;AAEP,eAAenB,SAAS,CAACsB,OAAzB","sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\n\nconst todoSlice = createSlice({\n  name: \"todos\",\n  initialState: [ ],\n  reducers: {\n    addTodo: (state, action) => {\n      const newTodo = {\n        id: Date.now(),\n        title: action.payload.title,\n        completed: false\n      };\n      state.push(newTodo);\n    },\n    toggleComplete: (state, action) => {\n      const index = state.findIndex((todo) => todo.id === action.payload.id);\n      state[index].completed = action.payload.completed;\n    },\n    deleteTodo: (state, action) => {\n      return state.filter((todo) => todo.id !== action.payload.id);\n    }\n  }\n});\n\nexport const { addTodo, toggleComplete, deleteTodo } = todoSlice.actions;\n\nexport default todoSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}